(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{363:function(t,s,a){"use strict";a.r(s);var n=a(15),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"分布式锁的关键点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁的关键点"}},[t._v("#")]),t._v(" 分布式锁的关键点")]),t._v(" "),s("ol",[s("li",[t._v("互斥性： 任何时间内都只有一个线程获取锁")]),t._v(" "),s("li",[t._v("防死锁： 假如程序崩溃了没有是否锁，要有另外一种方式去释放锁")]),t._v(" "),s("li",[t._v("加锁和解锁必须是同一个线程")]),t._v(" "),s("li",[t._v("锁的续期问题")])]),t._v(" "),s("h2",{attrs:{id:"基于redis的实现方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于redis的实现方案"}},[t._v("#")]),t._v(" 基于Redis的实现方案")]),t._v(" "),s("h3",{attrs:{id:"互斥性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#互斥性"}},[t._v("#")]),t._v(" 互斥性")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("实现方式一 ： Redis 的 "),s("code",[t._v("set NX")]),t._v(" 方式，key不存在设置成功，key存在则设置失败，通过这种方式可以保证同一时间只要一个线程能设置成功。")])]),t._v(" "),s("li",[s("p",[t._v("实现方式二：lua脚本的方式时间")])])]),t._v(" "),s("div",{staticClass:"language-lua line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 如果key不存在，还没有客户端加锁\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exists'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 或者 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("自己的clientId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 存在 ， 说明自己获取锁 \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hexists'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ARGV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 通过 hincrby 的方式加锁， 如果是重入，则在原来的基础上"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    \n    redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hincrby'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ARGV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 添加过期时间\n    redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pexpire'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ARGV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" ttl获取剩余的过期时间\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pttl'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h3",{attrs:{id:"防死锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防死锁"}},[t._v("#")]),t._v(" 防死锁")]),t._v(" "),s("p",[t._v("对"),s("code",[t._v("lock_key")]),t._v(" 设置过期时间，Redisson设置的默认时间是 "),s("code",[t._v("30s")]),t._v(" .")]),t._v(" "),s("h3",{attrs:{id:"加锁解锁同一个线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加锁解锁同一个线程"}},[t._v("#")]),t._v(" 加锁解锁同一个线程")]),t._v(" "),s("p",[t._v("redis中保存了 客户端线程，所以在解锁的时候可以去判断是否是自己加锁，只有时自己加锁才能去释放，避免误操作去释放锁")]),t._v(" "),s("h3",{attrs:{id:"锁的续期问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁的续期问题"}},[t._v("#")]),t._v(" 锁的续期问题")]),t._v(" "),s("p",[t._v("在实际的开发过程中，你很难去判断应该加锁多长时间，比如说你预估"),s("code",[t._v("30s")]),t._v(",在当时可能这个时间是OK的，但是后面你加了新的业务逻辑，需要更长的时间，而你很有可能忘记了修改这个时间，那么这个超时时间就有问题了。\n我们可以通过加个监听器去给锁增加时长，当key准备过期的时候，自动延长，这样就不会出现时间不够的情况，这也是Redisson目前时间的方案。")]),t._v(" "),s("h3",{attrs:{id:"优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ol",[s("li",[t._v("与Zookeeper对比，性能比较高")]),t._v(" "),s("li",[t._v("通过Redisson的Watch Dog机制解决了锁的续约问题")]),t._v(" "),s("li",[t._v("锁可重入")]),t._v(" "),s("li",[t._v("锁申请等待资源，使用redis的消息订阅机制解决无效申请问题，减少了资源消耗")])]),t._v(" "),s("h3",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("p",[s("strong",[t._v("最大的缺点是")]),t._v("： 如果使用Redis集群模式，当在master节点完成了加锁，此时master会同步给slave，假如此时master节点挂了，会导致锁信息丢失，\nslave切换成了master，其他线程就可以进来加锁，现象就是有多个线程同时获取锁，打破了"),s("strong",[t._v("互斥性")])]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/135864820",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redisson 实现分布式锁原理分析"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);