(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{364:function(t,a,s){"use strict";s.r(a);var o=s(15),r=Object(o.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("服务发现是微服务架构中的一个重要组件，服务发现的目的是让服务找到对应的服务提供者，从而实现服务之间的通信。服务发现的核心是服务注册和服务发现。")]),t._v(" "),a("h3",{attrs:{id:"数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据模型"}},[t._v("#")]),t._v(" 数据模型")]),t._v(" "),a("p",[t._v("nacos定义基于"),a("code",[t._v("服务-集群-实例")]),t._v("的模型。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.luoliang.top/blog/nacos_data_model.png",alt:""}})]),t._v(" "),a("p",[t._v("我们经常有会环境隔离的需求，比如你有多套测试环境，预发布环境等，nacos弄了一套隔离环境模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.luoliang.top/blog/Nacos_Logical_Isolation_Model.png",alt:""}})]),t._v(" "),a("p",[t._v("临时实例和持久化实例，两种区别在于健康检查的方式不同，临时实例使用客户端上报的方式，持久化实例使用的是反向检查的方式，一般对于不会主动上报的服务只能用持久化方式。")]),t._v(" "),a("h3",{attrs:{id:"数据一致性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据一致性"}},[t._v("#")]),t._v(" 数据一致性")]),t._v(" "),a("p",[t._v("nacos支持基于简化版本的Raft协议实现的CP强一致性和基于自研协议 Distro 的 AP 一致性。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.luoliang.top/blog/nacos_consistency.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"健康检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#健康检查"}},[t._v("#")]),t._v(" 健康检查")]),t._v(" "),a("p",[t._v("nacos提供了一种客户端上报心跳的健康检查方式 ，5秒上报一次，15秒没有接到上报，标记为不健康实例，30秒没有收到将删除临时节点。")]),t._v(" "),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://nacos.io/docs/ebook/agxdnq/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nacos 一致性协议"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);