(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{381:function(a,r,t){"use strict";t.r(r);var s=t(15),e=Object(s.a)({},(function(){var a=this,r=a._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("p",[a._v("它是JVM实现的锁，三大特性是：原子性，可见性，有序性。在使用上非常的方便，只需要在方法上加关键字，或者使用同步代码块的方式加锁即可。在"),r("code",[a._v("JDK1.5")]),a._v("之前它只有重量级锁，之后"),r("strong",[a._v("Doug Lea")]),a._v("在java层面实现了"),r("code",[a._v("AQS，ReentrantLock")]),a._v("等性能优于synchronized，后续的jdk版本可能有来自"),r("strong",[a._v("Doug Lea")]),a._v("的灵感增加了锁升级的过程（偏向锁，轻量级锁，重量级锁）性能得到了提升。")]),a._v(" "),r("h2",{attrs:{id:"markword"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#markword"}},[a._v("#")]),a._v(" markword")]),a._v(" "),r("p",[a._v("markword是JVM创建对象后在内存中的对象头的一部分结构，锁相关的数据会保存在里面，synchronized加锁其实就是对markword的数据进行修改实现，所以说synchronized是对象锁。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://images.luoliang.top/blog/%E5%AF%B9%E8%B1%A1%E5%A4%B4_mardword%E7%BB%93%E6%9E%84.png",alt:""}})]),a._v(" "),r("h2",{attrs:{id:"锁升级过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#锁升级过程"}},[a._v("#")]),a._v(" 锁升级过程")]),a._v(" "),r("blockquote",[r("p",[a._v("锁升级的过程：无锁----偏向锁---轻量级锁---重量级锁")])]),a._v(" "),r("h3",{attrs:{id:"偏向锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#偏向锁"}},[a._v("#")]),a._v(" 偏向锁")]),a._v(" "),r("p",[a._v("当markword还是无锁状态的时候，有一个线程过来加锁，直接通过cas的方式修改markword，把线程id设置到里面，并修改锁表设计为1。下一次还是同一个线程过来获取锁的时候，可直接获取锁，二如果是另外一个线程过来加锁，就需要升级为轻量级锁了。")]),a._v(" "),r("p",[a._v("这种加锁的方式的好处是不用经过上下文切换到内核，都是在用户态完成，加锁效率高。")]),a._v(" "),r("h3",{attrs:{id:"轻量级锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#轻量级锁"}},[a._v("#")]),a._v(" 轻量级锁")]),a._v(" "),r("p",[a._v("轻量级锁的 是在有线程竞争获取锁，但是竞争不激烈的情况下进行。比如两个线程交替获取锁。")]),a._v(" "),r("p",[a._v("当前线程试图去加锁，发现markword里标记了偏向锁，就会通过"),r("strong",[a._v("自旋+CAS")]),a._v("的方式去加锁。加锁成功会在栈上创建一个锁表设计，markword中记录一个指针指向栈中的锁标记。")]),a._v(" "),r("p",[a._v("自旋默认的次数是10次，如果10次自旋失败后，进入重量级锁")]),a._v(" "),r("h3",{attrs:{id:"重量级锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#重量级锁"}},[a._v("#")]),a._v(" 重量级锁")]),a._v(" "),r("p",[a._v("进入重量级锁会创建一个MonitorObject对象，然后在markword里面的指针保存这个对象的地址，锁的信息保存在MonitorObject对象里面。重量级锁会发生上下文切换，所以非常消耗资源。")]),a._v(" "),r("p",[a._v("对象结构保存的信息如下：")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("MonitorObject{\n   Thread owner   // 谁（线程）持有这个锁？  \n   waiset  // 等待队列，获取不到锁的线程在这里呆着\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br")])])])}),[],!1,null,null,null);r.default=e.exports}}]);